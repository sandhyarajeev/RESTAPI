package com.altimetrik.service;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.util.List;

import org.assertj.core.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.Mock;
import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.test.mock.mockito.MockBean;

import com.altimetrik.dto.EmployeeDTO;
import com.altimetrik.model.Employee;
import com.altimetrik.repository.EmployeeRepo;

@SpringBootTest(classes= {com.altimetrik.AltimetrikApplication.class})
public class CompanyServiceTest {

	@Autowired
	private CompanyService companyService;
	
	@MockBean
	private EmployeeRepo empRepo;
	
	@Mock
	ModelMapper modelMapper;
	
	private List<Employee> empList = null;	

	private List<EmployeeDTO> empDtoList = null ;
	
	private Employee emp1,emp2;
	
	private EmployeeDTO empDto1,empDto2;
	
	@BeforeEach
	public void setUp() {
		Employee emp1 = new Employee();
		emp1.setContactNum(43432L);
		emp1.setFirstName("sandhya");
		emp1.setLastName("rajeev");
		emp1.setEmpId("E001");
		Employee emp2 = new Employee();
		emp1.setContactNum(43432L);
		emp1.setFirstName("sandhya");
		emp1.setLastName("rajeev");
		emp1.setEmpId("E001");
		
		empList.add(emp1);
		empList.add(emp2);
		
		EmployeeDTO empDTO1 = new EmployeeDTO();
		empDTO1.setContactNum(43432L);
		empDTO1.setFirstName("sandhya");
		empDTO1.setLastName("rajeev");
		empDTO1.setEmpId("E001");
		EmployeeDTO empDTO2 = new EmployeeDTO();
		empDTO2.setContactNum(43432L);
		empDTO2.setFirstName("sandhya");
		empDTO2.setLastName("rajeev");
		empDTO2.setEmpId("E001");
		empDtoList.add(empDTO1);
		empDtoList.add(empDTO2);
		
	}
	
	@Test
	public void getEmployeesInProject() {

		when(empRepo.getEmployeesInProject("P001", "D001")).thenReturn(empList);
		when(modelMapper.map(emp1, EmployeeDTO.class)).thenReturn(empDTO1);
		when(modelMapper.map(emp2, EmployeeDTO.class)).thenReturn(empDTO2);
		
		assertEquals(companyService.getEmployeesInProject("P001", "D001").getStatusCode().);
		Assertions.assertThat(companyService.getEmployeesInProject("P001", "D001").getStatusCode()).
	}
}
